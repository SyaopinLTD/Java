import java.util.Arrays;
import java.util.Random;


public class HomeWork11 {
	static int sumN(int n){        //Method "Summary of numbers to n" 
		int sum = 0;
		if (n > 0){
			for (int i = 0; i < n; i ++){
				sum += i;
			}
			return sum;
		}
		else{
			return 0;
		}
	}
   static int factorial(int n){     //Method for factorial
	   int fact = 1;
	   if (n > 0){
	      for (int i = 1; i <= n; i ++){
		      fact *= i;
	       }
	      return fact;
	   }
	   else{
		   return 0;
	   }
   }
   static int factorialSum(int n){   //Method for sum of factorials
	   int sum = 0;
	   for (int i = 1; i <= n; i ++){
		   sum += factorial(i);
	   }
	   return sum;
   }
   static int getTriangleType (int x1, int y1, int x2, int y2, int x3, int y3){
	   int type = 0;
	   double a, b ,c;
	   a = length(x1, y1, x2, y2);
	   b = length(x1, y1, x3, y3);
	   c = length(x2, y2, x3, y3);
	   if (isTriangle(a, b, c)){
		   if ((Double.compare(a, b) == 0)&&(Double.compare(a, c) == 0)){
			   type = 1;
		   }
		   else if ((Double.compare(a, b) == 0)||(Double.compare(a, c) == 0)||(Double.compare(b, c) == 0)){
			   type = 2;
		   }
		   else {
			   type = 3;
		   }
	   }
	   return type;
   }
   static double length (int x1, int y1, int x2, int y2){
	   return Math.sqrt((x2 - x1)*(x2 - x1) + (y2 - y1)*(y2 - y1));
   }
   static boolean isTriangle (double a, double b, double c){
	   boolean check = false;
	   if ((Double.compare(b+c, a)>=0)&&(Double.compare(a+c, b)>=0)&&(Double.compare(a+b, c)>=0)){
		   check = true;
	   }
	   return check;
   }
   static boolean isUnique (int []a){
	 int [] tmp = Arrays.copyOf(a, a.length); 
	 boolean check = true;
	 Arrays.sort(tmp);
	 for (int i = 0 ; i < a.length-1; i ++){
		 if (tmp[i] != tmp[i+1]){
			 continue;
		 }
		 else {
			 check = false;
			 break;
		 }
	 }
	 return check;
	 
   }
	public static void main(String[] args) {
     System.out.println("Summary of numbers: "+sumN(5));
     System.out.println("Factorial: "+factorial(5));
     System.out.println("Sum of Factorials: "+factorialSum(5));
     switch(getTriangleType(1, 1, 3, 1, 1, 3)){
        case 1: System.out.println("It's equilateral triangle");break;
        case 2: System.out.println("It's isosceles triangle");break;
        case 3: System.out.println("It's arbitrary triangle");break;
        default: System.out.println("Unknown case");break;
     }
    int n = 10;
    int [] ar = new int [n]; 
    Random rand = new Random();
    for (int i = 0; i < n; i ++){
    	ar[i] = rand.nextInt(100);
    }
    System.out.println("My array: "+Arrays.toString(ar));
    if (isUnique(ar)){
    	System.out.println("All elements are unique");
    }
    else {
    	System.out.println("There are non-unique elements");
    }
	}

}
